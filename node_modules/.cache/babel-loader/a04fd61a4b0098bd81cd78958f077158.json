{"ast":null,"code":"import _toConsumableArray from \"/Users/thecoderlorian/Documents/dev/2 copy/com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/thecoderlorian/Documents/dev/2 copy/com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_TO_COMPARE, REMOVE_FROM_COMPARE, REMOVE_ALL_COMPARE, REFRESH_STORE } from '../constants/action-types';\nimport { toast } from 'react-toastify';\nimport { persistReducer } from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage';\nvar initialState = {\n  compare: []\n};\n\nvar compareReducer = function compareReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_COMPARE:\n      var productId = action.productId;\n\n      if (state.compare.indexOf(productId) >= 0) {\n        toast.error(\"Item Removed from Compare\");\n        return {\n          compare: state.compare.filter(function (item) {\n            return item !== action.productId;\n          })\n        };\n      }\n\n      toast.success(\"Item Added to Compare\");\n      return _objectSpread({}, state, {\n        compare: [].concat(_toConsumableArray(state.compare), [action.productId])\n      });\n\n    case REMOVE_FROM_COMPARE:\n      toast.error(\"Item Removed from Compare\");\n      return {\n        compare: state.compare.filter(function (item) {\n          return item !== action.productId;\n        })\n      };\n\n    case REMOVE_ALL_COMPARE:\n      if (state.compare.length > 0) {\n        toast.error(\"Clear All Removed from Compare\");\n      }\n\n      return {\n        compare: []\n      };\n\n    case REFRESH_STORE:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nvar persistConfig = {\n  keyPrefix: \"porto-\",\n  key: \"comparelist\",\n  storage: storage\n};\nexport default persistReducer(persistConfig, compareReducer);","map":{"version":3,"names":["ADD_TO_COMPARE","REMOVE_FROM_COMPARE","REMOVE_ALL_COMPARE","REFRESH_STORE","toast","persistReducer","storage","initialState","compare","compareReducer","state","action","type","productId","indexOf","error","filter","item","success","length","persistConfig","keyPrefix","key"],"sources":["/Users/thecoderlorian/Documents/dev/2 copy/com/src/reducers/compare.js"],"sourcesContent":["import { ADD_TO_COMPARE, REMOVE_FROM_COMPARE, REMOVE_ALL_COMPARE, REFRESH_STORE } from '../constants/action-types';\r\nimport { toast } from 'react-toastify';\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst initialState = { compare: [] };\r\n\r\nconst compareReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case ADD_TO_COMPARE:\r\n            let productId = action.productId;\r\n            if ( state.compare.indexOf( productId ) >= 0 ) {\r\n                toast.error( \"Item Removed from Compare\" );\r\n                return {\r\n                    compare: state.compare.filter( item => item !== action.productId )\r\n                }\r\n            }\r\n            toast.success( \"Item Added to Compare\" );\r\n            return { ...state, compare: [ ...state.compare, action.productId ] }\r\n\r\n        case REMOVE_FROM_COMPARE:\r\n            toast.error( \"Item Removed from Compare\" );\r\n            return {\r\n                compare: state.compare.filter( item => item !== action.productId )\r\n            }\r\n\r\n        case REMOVE_ALL_COMPARE:\r\n            if ( state.compare.length > 0 ) {\r\n                toast.error( \"Clear All Removed from Compare\" );\r\n            }\r\n            return {\r\n                compare: []\r\n            }\r\n\r\n        case REFRESH_STORE:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nconst persistConfig = {\r\n    keyPrefix: \"porto-\",\r\n    key: \"comparelist\",\r\n    storage\r\n}\r\n\r\nexport default persistReducer( persistConfig, compareReducer );"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,mBAAzB,EAA8CC,kBAA9C,EAAkEC,aAAlE,QAAuF,2BAAvF;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,IAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE;AAAX,CAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAoC;EAAA,IAAlCC,KAAkC,uEAA1BH,YAA0B;EAAA,IAAZI,MAAY;;EACvD,QAASA,MAAM,CAACC,IAAhB;IACI,KAAKZ,cAAL;MACI,IAAIa,SAAS,GAAGF,MAAM,CAACE,SAAvB;;MACA,IAAKH,KAAK,CAACF,OAAN,CAAcM,OAAd,CAAuBD,SAAvB,KAAsC,CAA3C,EAA+C;QAC3CT,KAAK,CAACW,KAAN,CAAa,2BAAb;QACA,OAAO;UACHP,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcQ,MAAd,CAAsB,UAAAC,IAAI;YAAA,OAAIA,IAAI,KAAKN,MAAM,CAACE,SAApB;UAAA,CAA1B;QADN,CAAP;MAGH;;MACDT,KAAK,CAACc,OAAN,CAAe,uBAAf;MACA,yBAAYR,KAAZ;QAAmBF,OAAO,+BAAOE,KAAK,CAACF,OAAb,IAAsBG,MAAM,CAACE,SAA7B;MAA1B;;IAEJ,KAAKZ,mBAAL;MACIG,KAAK,CAACW,KAAN,CAAa,2BAAb;MACA,OAAO;QACHP,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcQ,MAAd,CAAsB,UAAAC,IAAI;UAAA,OAAIA,IAAI,KAAKN,MAAM,CAACE,SAApB;QAAA,CAA1B;MADN,CAAP;;IAIJ,KAAKX,kBAAL;MACI,IAAKQ,KAAK,CAACF,OAAN,CAAcW,MAAd,GAAuB,CAA5B,EAAgC;QAC5Bf,KAAK,CAACW,KAAN,CAAa,gCAAb;MACH;;MACD,OAAO;QACHP,OAAO,EAAE;MADN,CAAP;;IAIJ,KAAKL,aAAL;MACI,OAAOI,YAAP;;IACJ;MACI,OAAOG,KAAP;EA7BR;AAgCH,CAjCD;;AAmCA,IAAMU,aAAa,GAAG;EAClBC,SAAS,EAAE,QADO;EAElBC,GAAG,EAAE,aAFa;EAGlBhB,OAAO,EAAPA;AAHkB,CAAtB;AAMA,eAAeD,cAAc,CAAEe,aAAF,EAAiBX,cAAjB,CAA7B"},"metadata":{},"sourceType":"module"}