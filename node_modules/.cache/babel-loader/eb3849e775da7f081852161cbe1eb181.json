{"ast":null,"code":"import _slicedToArray from \"/Users/thecoderlorian/Documents/dev/2 copy/com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thecoderlorian/Documents/dev/2 copy/com/src/components/features/qty.jsx\";\nimport React, { useEffect, useState } from 'react';\n\nfunction Qty(props) {\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var id = (Math.random() * 10000).toFixed(0);\n  var _props$addClass = props.addClass,\n      addClass = _props$addClass === void 0 ? 'product-single-qty' : _props$addClass;\n  useEffect(function () {\n    document.querySelector(\"#product-qty-\".concat(id, \" input\")) && document.querySelector(\"#product-qty-\".concat(id, \" input\")).setAttribute(\"value\", count);\n  }, []);\n  useEffect(function () {\n    document.querySelector(\"#product-qty-\".concat(id, \" input\")) && document.querySelector(\"#product-qty-\".concat(id, \" input\")).setAttribute(\"value\", count);\n  });\n\n  var countUp = function countUp() {\n    var quantity = parseInt(document.querySelector('.horizontal-quantity').value);\n\n    if (quantity < (props.stock ? props.stock : 5)) {\n      setCount(quantity + 1);\n      var inputs = document.querySelectorAll('.horizontal-quantity');\n\n      for (var i = 0; i < inputs.length; i++) {\n        inputs[i].value = quantity + 1;\n      }\n    }\n  };\n\n  var countDown = function countDown() {\n    var quantity = parseInt(document.querySelector('.horizontal-quantity').value);\n\n    if (quantity > 1) {\n      setCount(quantity - 1);\n      var inputs = document.querySelectorAll('.horizontal-quantity');\n\n      for (var i = 0; i < inputs.length; i++) {\n        inputs[i].value = quantity - 1;\n      }\n    }\n  };\n\n  var setQty = function setQty(e) {\n    if (e.target.value > 0) {\n      setCount(parseInt(e.target.value));\n      var inputs = document.querySelectorAll('.horizontal-quantity');\n\n      for (var i = 0; i < inputs.length; i++) {\n        inputs[i].value = e.target.value;\n      }\n    } else e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(addClass),\n    id: \"product-qty-\".concat(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group bootstrap-touchspin bootstrap-touchspin-injected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-btn input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline btn-down-icon bootstrap-touchspin-down\",\n    onClick: countDown,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"horizontal-quantity form-control\",\n    type: \"number\",\n    min: \"1\",\n    max: props.stock,\n    value: count,\n    onChange: function onChange(e) {\n      setQty(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-btn input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline btn-up-icon bootstrap-touchspin-up\",\n    onClick: countUp,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default Qty;","map":{"version":3,"names":["React","useEffect","useState","Qty","props","count","setCount","id","Math","random","toFixed","addClass","document","querySelector","setAttribute","countUp","quantity","parseInt","value","stock","inputs","querySelectorAll","i","length","countDown","setQty","e","target","preventDefault"],"sources":["/Users/thecoderlorian/Documents/dev/2 copy/com/src/components/features/qty.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Qty( props ) {\r\n    const [ count, setCount ] = useState( 1 );\r\n    let id = ( Math.random() * 10000 ).toFixed( 0 );\r\n    const { addClass = 'product-single-qty' } = props;\r\n\r\n    useEffect( () => {\r\n        document.querySelector( `#product-qty-${ id } input` ) && document.querySelector( `#product-qty-${ id } input` ).setAttribute( \"value\", count );\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        document.querySelector( `#product-qty-${ id } input` ) && document.querySelector( `#product-qty-${ id } input` ).setAttribute( \"value\", count );\r\n    } )\r\n\r\n    const countUp = () => {\r\n        let quantity = parseInt( document.querySelector( '.horizontal-quantity' ).value );\r\n        if ( quantity < ( props.stock ? props.stock : 5 ) ) {\r\n            setCount( quantity + 1 );\r\n\r\n            let inputs = document.querySelectorAll( '.horizontal-quantity' );\r\n            for ( let i = 0; i < inputs.length; i++ ) {\r\n                inputs[ i ].value = quantity + 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    const countDown = () => {\r\n        let quantity = parseInt( document.querySelector( '.horizontal-quantity' ).value );\r\n        if ( quantity > 1 ) {\r\n            setCount( quantity - 1 );\r\n\r\n            let inputs = document.querySelectorAll( '.horizontal-quantity' );\r\n            for ( let i = 0; i < inputs.length; i++ ) {\r\n                inputs[ i ].value = quantity - 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    const setQty = ( e ) => {\r\n        if ( e.target.value > 0 ) {\r\n            setCount( parseInt( e.target.value ) );\r\n\r\n            let inputs = document.querySelectorAll( '.horizontal-quantity' );\r\n            for ( let i = 0; i < inputs.length; i++ ) {\r\n                inputs[ i ].value = e.target.value;\r\n            }\r\n        }\r\n        else\r\n            e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className={ `${ addClass }` } id={ `product-qty-${ id }` }>\r\n            <div className=\"input-group bootstrap-touchspin bootstrap-touchspin-injected\">\r\n                <span className=\"input-group-btn input-group-prepend\">\r\n                    <button className=\"btn btn-outline btn-down-icon bootstrap-touchspin-down\" onClick={ countDown } type=\"button\"></button>\r\n                </span>\r\n                <input className=\"horizontal-quantity form-control\" type=\"number\" min=\"1\" max={ props.stock } value={ count } onChange={ ( e ) => { setQty( e ) } } />\r\n                <span className=\"input-group-btn input-group-append\">\r\n                    <button className=\"btn btn-outline btn-up-icon bootstrap-touchspin-up\" onClick={ countUp } type=\"button\"></button>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Qty;"],"mappings":"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"},"metadata":{},"sourceType":"module"}